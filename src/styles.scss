@use "sass:map";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
$disk-palette: (
  50: #ededee,
  100: #d1d3d8,
  200: #b2b7bf,
  300: #939aa7,
  400: #7c8594,
  500: #667083,
  600: #586272,
  700: #484f5c,
  800: #383d47,
  900: #252930,
);
$nord-palette: (
  50: #e2f0fa,
  100: #b7d9f5,
  200: #89c2ef,
  300: #58abe9,
  400: #2e9ae7,
  500: #0089e3,
  600: #007cd6,
  700: #006bc3,
  800: #005ab2,
  900: #003d93,
);
$novo-palette: (
  50: #e6e8f2,
  100: #bfc5e0,
  200: #959fcb,
  300: #6c7ab7,
  400: #4d5ea8,
  500: #2b449b,
  600: #253d91,
  700: #1b3386,
  800: #122a7a,
  900: #001965,
  A100: /* 200 959fcb - -1-3-1-625 = */ #8a9ae1,
  A200: /* 300 6c7ab7 + 09023e = */ #637cef,
  A400: /* 400 4d5ea8 + 041153 = */ #4f6ffb,
  A700: /* 500 2b449b + 00106-1 = */ #2b54fa,
  contrast: (
    50: map.get($disk-palette,900),
    100: map.get($disk-palette,900),
    200: map.get($disk-palette,900),
    300: map.get($disk-palette,50),
    400: map.get($disk-palette,50),
    500: map.get($disk-palette,50),
    600: map.get($disk-palette,50),
    700: map.get($disk-palette,50),
    800: map.get($disk-palette,50),
    900: map.get($disk-palette,50),
    A100: map.get($disk-palette,900),
    A200: map.get($disk-palette,50),
    A400: map.get($disk-palette,50),
    A700: map.get($disk-palette,50),
  ),
);
$action-palette: (
  50: #e2f1ff,
  100: #b8dcff,
  200: #88c6ff,
  300: #53b0ff,
  400: #1f9eff,
  500: #008eff,
  600: #007ff9,
  700: #006de4,
  800: #005ad2,
  900: #0e3ab3,
  A100: /* 200 88c6ff - -1-3-1-625 = */ #75bcff,
  A200: /* 300 53b0ff + 09023e = */ #5cb2ff,
  A400: /* 400 1f9eff + 041153 = */ #1fafff,
  A700: /* 500 008eff + 00106-1 = */ #009efe,
  contrast: (
    50: map.get($nord-palette,900),
    100: map.get($nord-palette,900),
    200: map.get($nord-palette,900),
    300: map.get($nord-palette,50),
    400: map.get($nord-palette,50),
    500: map.get($nord-palette,50),
    600: map.get($nord-palette,50),
    700: map.get($nord-palette,50),
    800: map.get($nord-palette,50),
    900: map.get($nord-palette,50),
    A100: map.get($nord-palette,900),
    A200: map.get($nord-palette,50),
    A400: map.get($nord-palette,50),
    A700: map.get($nord-palette,50),
  ),
);

$warm-palette: (
  50: #faf1e0,
  100: #f3dcb1,
  200: #ebc67f,
  300: #e4af4d,
  400: #df9f29,
  500: #db9009,
  600: #d88504,
  700: #d27700,
  800: #cc6900,
  900: #c15200,
  A100: /* 200 ebc67f - -1-3-1-625 = */ #d8b59f,
  A200: /* 300 e4af4d + 09023e = */ #edaf7f,
  A400: /* 400 df9f29 + 041153 = */ #dfaf7c,
  A700: /* 500 db9009 + 00106-1 = */ #dba068,
  contrast: (
    50: map.get($nord-palette,900),
    100: map.get($nord-palette,900),
    200: map.get($nord-palette,900),
    300: map.get($nord-palette,50),
    400: map.get($nord-palette,50),
    500: map.get($nord-palette,50),
    600: map.get($nord-palette,50),
    700: map.get($nord-palette,50),
    800: map.get($nord-palette,50),
    900: map.get($nord-palette,50),
    A100: map.get($nord-palette,900),
    A200: map.get($nord-palette,50),
    A400: map.get($nord-palette,50),
    A700: map.get($nord-palette,50),
  ),
);
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$novo-primary: mat.define-palette($novo-palette);
$novo-accent: mat.define-palette($action-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$novo-warn: mat.define-palette($warm-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
@font-face {
  font-family: 'Noto Sans';
  src: url('./assets/fonts/NotoSans-VariableFont_wdth_wght.ttf') format("truetype-variations");
  font-weight: 1 999;
}
$noto-typography: mat.define-typography-config(
  $font-family: '"Noto Sans", sans-serif',
);
@include mat.typography-hierarchy($noto-typography);

$novo-theme: mat.define-light-theme(
  (
    color: (
      primary: $novo-primary,
      accent: $novo-accent,
      warn: $novo-warn,
    ),
    typography: $noto-typography,
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($novo-theme);
/* You can add global styles to this file, and also import other style files */
* {
  font-family: 'Noto Sans', sans-serif !important;
}
html,
body {
  height: 100%;
  max-width: 100vw;
  padding: 0;
  margin: 0;
  overflow-x: hidden;
}
